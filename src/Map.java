import java.util.Random;

public class Map {
    String player;
    String[][] tileMap = {
            {"\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33"},
            {"\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33"},
            {"\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33"},
            {"\uD83C\uDF33", "\uD83C\uDF33", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33"},
            {"\uD83C\uDF33", "\uD83C\uDF33", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33"},
            {"\uD83C\uDF33", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33"},
            {"\uD83C\uDF33", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33"},
            {"\uD83C\uDF33", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83C\uDF33", "\uD83C\uDF33"},
            {"\uD83C\uDF33", "\uD83C\uDF33", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83C\uDF33"},
            {"\uD83C\uDF33", "\uD83C\uDF33", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83C\uDF33"},
            {"\uD83C\uDF33", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83C\uDF33"},
            {"\uD83C\uDF33", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83C\uDF33"},
            {"\uD83C\uDF33", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83C\uDF33"},
            {"\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83C\uDF33"},
            {"\uD83C\uDF33", "\uD83C\uDF33", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFE9", "\uD83C\uDF33"},
            {"\uD83C\uDF33", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFE9", "\uD83C\uDF33"},
            {"\uD83C\uDF33", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFE9", "\uD83C\uDF33"},
            {"\uD83C\uDF33", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83C\uDF33", "\uD83C\uDF33"},
            {"\uD83C\uDF33", "\uD83C\uDF33", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33"},
            {"\uD83C\uDF33", "\uD83C\uDF33", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33"},
            {"\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33"},
            {"\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33"},
            {"\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83D\uDFE9", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83D\uDFEB", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33"},
            {"\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33", "\uD83C\uDF33"},
    };

    Map(String player) {
        this.player = player;
    }

    public String getPlayer() {
        return player;
    }

    public void printMap(int playerX, int playerY) {
        for (int i = 0; i < 24; i++) {
            for (int j = 0; j < 24; j++) {
                if (playerX == j && playerY == i) {
                    System.out.print(player);
                } else {
                    System.out.print(tileMap[i][j]);
                }
            }
            System.out.println();
        }
    }

    public boolean checkForFight(int playerX, int playerY) {
        if ("\uD83D\uDFE9".equals(tileMap[playerY][playerX])) {
            Random random = new Random();
            if (random.nextInt(6) == 1) {
                return true;
            }
        }
        return false;
    }
}
